name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  release-to-pypi:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up PDM
      uses: pdm-project/setup-pdm@v3
      with:
        python-version: "3.8"
    - name: Build wheels
      run: pdm build --no-sdist
      env:
        PDM_BUILD_SCM_VERSION: ${{github.ref_name}}
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  build-docker-image:
    runs-on: ubuntu-latest
    needs:
      - release-to-pypi
    steps:
    - uses: actions/checkout@v2
    - run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV
    - run: echo "Release new docker image with tag ${{ env.RELEASE_VERSION }}"
    - name: Building the Docker image
      uses: nick-invision/retry@v2.4.0
      env:
        DOCKER_TAG: ${{ env.RELEASE_VERSION }}
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: |
          docker build --build-arg ctkversion=${DOCKER_TAG} -t chaostoolkit/chaostoolkit .
          docker tag chaostoolkit/chaostoolkit:latest chaostoolkit/chaostoolkit:${DOCKER_TAG}

    - name: Publishing to the Docker repository
      env:
        DOCKER_TAG: ${{ env.RELEASE_VERSION }}
        DOCKER_USER_NAME: chaostoolkit
        DOCKER_PWD: ${{ secrets.DOCKER_PWD }}
      run: |
        docker login -u ${DOCKER_USER_NAME} -p ${DOCKER_PWD}
        docker push chaostoolkit/chaostoolkit:$DOCKER_TAG
        docker push chaostoolkit/chaostoolkit:latest

  create-gh-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  upload-gh-release-assets:
    runs-on: ubuntu-latest
    needs:
      - release-to-pypi
    steps:
      - name: Download pypi artifacts
        uses: actions/download-artifact@v2-preview
        with:
          name: chaostoolkit-packages
          path: dist
      - name: Upload wheel & source dist to GH release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*.whl,dist/*.tar.gz"
          artifact: ""
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
